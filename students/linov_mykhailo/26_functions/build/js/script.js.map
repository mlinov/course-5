{"version":3,"file":"script.js","mappings":";;;;;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAIA,4N","sources":["webpack://gulp_webpack/./src/js/script.js"],"sourcesContent":["// Мінімум\r\n\r\n// 1. Напиши всі можливі варіанти створення функцій.\r\n\r\n// function asdf() {\r\n//     return '10'\r\n// };\r\n// console.log(asdf());\r\n\r\n// const example = function examp() {\r\n//     return '1'\r\n// }\r\n// console.log(example());\r\n\r\n// const add = (a, b) => {\r\n//     return a + b;\r\n// }\r\n// console.log(add('asdf', 'qwer'));\r\n\r\n// 2. Створи функцію, яка буде виводити кількість переданих їй аргументів.\r\n\r\n// function quantity(...args) {\r\n//     const numberOfArgs = args.length;\r\n\r\n//     return numberOfArgs;\r\n// }\r\n\r\n\r\n// console.log(quantity(123123, 25, 358, 'SDFGH', 'asdfasdf'));\r\n\r\n// 3. Напиши функцію, яка приймає 2 числа і повертає :\r\n// -1, якщо перше число менше, ніж друге;\r\n// 1 - якщо перше число більше, ніж друге;\r\n// 0 - якщо числа рівні.\r\n\r\n\r\n// function twoNumbers(first, second) {\r\n//     if (first < second) {\r\n//         return '-1'\r\n//     } else if (second < first) {\r\n//         return '1'\r\n//     } else {\r\n//         return '0'\r\n//     }\r\n// }\r\n\r\n// console.log(twoNumbers(1, 6));\r\n// console.log(twoNumbers(10, 6));\r\n// console.log(twoNumbers(5, 5));\r\n\r\n// 4. Напиши функцію, яка обчислює факторіал переданого їй числа.\r\n\r\n// function factorial(number) {\r\n//     if (number < 0 || isNaN(number)) {\r\n//         return \"This is not a correct input\"\r\n//     }\r\n//     else if (number === 0) {\r\n//         return '1';\r\n//     }\r\n//     else {\r\n//         const factorialNumber = number * factorial(number - 1);\r\n//         return factorialNumber;\r\n//     }\r\n// }\r\n\r\n// console.log(factorial(5));\r\n// console.log(factorial(0));\r\n// console.log(factorial(-3));\r\n// console.log(factorial('asdf'));\r\n\r\n\r\n// 5. Напиши функцію, яка приймає три окремі цифри і перетворює їх в одне число. Наприклад: цифри 1, 4, 9 перетворяться в число 149.\r\n\r\n// function threeNumbers(num1, num2, num3) {\r\n//     if (isNaN(num1) || isNaN(num2) || isNaN(num3) || num1 < 0 || num2 < 0 || num3 < 0) {\r\n//         return ('Please enter valid numbers(0-9)')\r\n//     }\r\n//     else {\r\n//         const numberString1 = num1.toString();\r\n//         const numberString2 = num2.toString();\r\n//         const numberString3 = num3.toString();\r\n//         const finalNumber = Number(numberString1 + numberString2 + numberString3);\r\n//         return finalNumber;\r\n//     }\r\n// }\r\n\r\n// console.log(threeNumbers(5, 2, 3));\r\n\r\n// 6. Напиши функцію, яка приймає довжину і ширину прямокутника і обчислює його площу. Якщо в функцію передали 1 параметр, то вона обчислює площу квадрата.\r\n\r\n// function squareOfRectangle(length, width) {\r\n//     if (isNaN(length) || length < 0) {\r\n//         return ('Please enter valid length');\r\n//     }\r\n//     if (width !== undefined && (isNaN(width)) || width < 0) {\r\n//         return ('Please enter valid width');\r\n//     }\r\n//     let square;\r\n//     if (width === undefined) {\r\n//         square = length * length;\r\n//     }\r\n//     else {\r\n//         square = length * width;\r\n//     }\r\n//     return square;\r\n// }\r\n\r\n// console.log(squareOfRectangle(5, 6));\r\n// console.log(squareOfRectangle(5));\r\n\r\n// Норма\r\n\r\n// 1. Напиши функцію, яка перевіряє, чи є передане їй число “досконалим числом”. Досконале число - це число, яке дорівнює сумі всіх своїх дільників.\r\n\r\n\r\n\r\n// 2. Напиши функцію, яка приймає мінімальне і максимальне значення для діапазону, і виводить тільки ті числа з діапазону, які є досконалими. Використовуй написану раніше функцію, щоб дізнатися, чи є це число досконалим.\r\n"],"names":[],"sourceRoot":""}