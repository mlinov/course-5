@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 400;
  src: url("./fonts/roboto-v30-latin-regular.woff2") format("woff2");
}

@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 500;
  src: url("./fonts/roboto-v30-latin-500.woff2") format("woff2");
}

@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 400;
  src: url("./fonts/delius-unicase-v26-latin-regular.woff2") format("woff2");
}

body {
  font-family: "Roboto", Arial, Helvetica, sans-serif;
  background-color: #fff;
  font-size: 20px;
  padding: 15px 135px;
}

.container {
  max-width: 1170px;
  margin: 0 auto;
  padding: 0 15px;
}

.row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 -15px;
}

[class*=col-] {
  padding: 15px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.col-1 {
  max-width: 8.3333333333%;
  width: 100%;
  -ms-flex-preferred-size: 8.3333333333%;
  flex-basis: 8.3333333333%;
}

.col-2 {
  max-width: 16.6666666667%;
  width: 100%;
  -ms-flex-preferred-size: 16.6666666667%;
  flex-basis: 16.6666666667%;
}

.col-3 {
  max-width: 25%;
  width: 100%;
  -ms-flex-preferred-size: 25%;
  flex-basis: 25%;
}

.col-4 {
  max-width: 33.3333333333%;
  width: 100%;
  -ms-flex-preferred-size: 33.3333333333%;
  flex-basis: 33.3333333333%;
}

.col-5 {
  max-width: 41.6666666667%;
  width: 100%;
  -ms-flex-preferred-size: 41.6666666667%;
  flex-basis: 41.6666666667%;
}

.col-6 {
  max-width: 50%;
  width: 100%;
  -ms-flex-preferred-size: 50%;
  flex-basis: 50%;
}

.col-7 {
  max-width: 58.3333333333%;
  width: 100%;
  -ms-flex-preferred-size: 58.3333333333%;
  flex-basis: 58.3333333333%;
}

.col-8 {
  max-width: 66.6666666667%;
  width: 100%;
  -ms-flex-preferred-size: 66.6666666667%;
  flex-basis: 66.6666666667%;
}

.col-9 {
  max-width: 75%;
  width: 100%;
  -ms-flex-preferred-size: 75%;
  flex-basis: 75%;
}

.col-10 {
  max-width: 83.3333333333%;
  width: 100%;
  -ms-flex-preferred-size: 83.3333333333%;
  flex-basis: 83.3333333333%;
}

.col-11 {
  max-width: 91.6666666667%;
  width: 100%;
  -ms-flex-preferred-size: 91.6666666667%;
  flex-basis: 91.6666666667%;
}

.col-12 {
  max-width: 100%;
  width: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

html,
body {
  height: 100%;
}

.container {
  height: 100%;
}

img {
  width: 100%;
  height: 100%;
  border-radius: 20px;
}

.container .title {
  font-weight: 400;
  font-size: 36px;
  color: #000;
  line-height: normal;
  letter-spacing: 1.8px;
  font-family: "Delius Unicase", Arial, Helvetica, sans-serif;
  font-style: normal;
  text-align: center;
  padding-top: 36px;
  padding-bottom: 50px;
}

.grid {
  display: grid;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: repeat(3, 370px);
  grid-auto-rows: 330px;
  gap: 30px;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.grid__item {
  position: relative;
  background-color: lightgray;
}

.grid__item:nth-child(1),
.grid__item:nth-child(5) {
  grid-column: 1/span 4;
}

.grid__item:nth-child(2),
.grid__item:nth-child(6) {
  grid-column: 5/-1;
}

.grid__item:nth-child(3) {
  grid-column: 1/span 8;
}

.grid__item:nth-child(4) {
  grid-column: 9/-1;
}

.grid__text {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0 20px;
}

.grid__text-author {
  font-weight: 500;
  font-size: 20px;
  color: #fff;
  line-height: normal;
  letter-spacing: normal;
  font-family: "Roboto", Arial, Helvetica, sans-serif;
  font-style: normal;
}

.grid__text-date {
  font-weight: 400;
  font-size: 20px;
  color: #fff;
  line-height: normal;
  letter-spacing: normal;
  font-family: "Roboto", Arial, Helvetica, sans-serif;
  font-style: normal;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
